#include <iostream>
#include <omp.h>

using namespace std;

void simpleBubble(int arr[], int n)
{
    double start_time = omp_get_wtime();
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                swap(arr[j], arr[j + 1]);
            }
        }
    }
    cout<<"Sorting Array: ";
    for (int i = 0; i < n ; i++)
    {
        cout<<" "<<arr[i];
    }
    cout<<endl;
    double end_time = omp_get_wtime();

    cout << "Simple Bubble Sort Time: " << (end_time - start_time) * 1000 << " milliseconds" << endl;
}

void parallelBubble(int arr[], int n)
{
    double start_time = omp_get_wtime();
    #pragma omp parallel for
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                swap(arr[j], arr[j + 1]);
            }
        }
    }
    cout<<"Sorting Array: ";
    for (int i = 0; i < n ; i++)
    {
        cout<<" "<<arr[i];
    }
    cout<<endl;
    double end_time = omp_get_wtime();

    cout << "Parallel Bubble Sort Time: " << (end_time - start_time) * 1000 << " milliseconds" << endl;
}

int main()
{
    // int arr[] = {8, 4, 5, 7, 2};
    const int MAX_SIZE = 100; // Maximum size of the array
    int arr[MAX_SIZE];        // Declare an array
    int n;                    // Variable to store the size of the array

    std::cout << "Enter the number of elements: ";
    std::cin >> n;

    for (int i = 0; i < n; ++i) {
        std::cout << "Enter element " << i + 1 << ": ";
        std::cin >> arr[i];
    }

    simpleBubble(arr, n);
    parallelBubble(arr, n);

    return 0;
}






//////////////////////////////////////////
//Bubble sort

#include<iostream>
#include<stdlib.h>
#include<omp.h>
using namespace std;
void bubble(int *, int);
void swap(int &, int &);
void bubble(int *a, int n)
{
 for( int i = 0; i < n; i++ )
 {
 int first = i % 2;
 #pragma omp parallel for shared(a,first)
 for( int j = first; j < n-1; j += 2 )
 {
 if( a[ j ] > a[ j+1 ] )
 {
 swap( a[ j ], a[ j+1 ] );
 }
 }
 }
}
void swap(int &a, int &b)
{
 int test;
 test=a;
 a=b;
 b=test;
}
int main()
{
 int *a,n;
 cout<<"\n enter total no of elements=>";
 cin>>n;
 a=new int[n];
 cout<<"\n enter elements=>";
 for(int i=0;i<n;i++)
 {
 cin>>a[i];
 }

 bubble(a,n);

 cout<<"\n sorted array is=>";
 for(int i=0;i<n;i++)
 {
 cout<<a[i]<<endl;
 }
return 0;
}

